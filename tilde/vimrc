" === General Setup ===
set noswapfile         " I don't like Swapfiles
set spell              " Activate spell checking
colorscheme solarized8 " solarized light
let g:netrw_banner=0   " disable netrw banner

" === fzf ===
" Fuzzy Finder with Ctrl+P
nnoremap <C-p> :<C-u>FZF<cr>

" === ale ===
" highlight linter output with cats, but without a red gutter
let g:ale_sign_column_always = 1
let g:ale_sign_error="ðŸ˜º"
let g:ale_sign_warning="ðŸ˜º"
let g:ale_sign_info="ðŸ˜º"
let g:ale_sign_style_error="ðŸ˜º"
let g:ale_sign_style_warning="ðŸ˜º"
highlight clear ALEErrorSign
highlight clear ALEWarningSign

" automatic formatting on save
let g:ale_fix_on_save=1
let g:ale_fixers = {
\   'css': ['prettier'],
\   'go': ['gofmt'],
\   'javascript': ['prettier'],
\   'typescript': ['prettier'],
\   'typescriptreact': ['prettier'],
\   'scss': ['prettier'],
\   'rust': ['rustfmt'],
\}

" use ale as the omnifunc
set omnifunc=ale#completion#OmniFunc

" === smart tab ===
" enter tab when at beginning of line, otherwise: run omnifunc
" https://vim.fandom.com/wiki/Smart_mapping_for_tab_completion
function! SmartTab()
  if strpart( getline('.'), 0, col('.')-1 ) =~ '^\s*$'
    return "\<Tab>"
  else
    return "\<C-X>\<C-O>"
endfunction

" use <c-r>= in insert mode to be able to call the function without leaving insert mode
inoremap <Tab> <c-r>=SmartTab()<Return>

" === leader key binding ===
let mapleader=","
nnoremap <leader>r :ALERename<Return>
nnoremap <leader>d :ALEGoToDefinition<Return>
