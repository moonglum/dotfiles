#!/bin/sh
# provision this Ubuntu machine
set -eu

echob() {
	echo "$(tput bold)${1}$(tput sgr0)"
}

echob "Install apt packages and sources"

codename=$(lsb_release -cs)
release=$(lsb_release -rs)

"$(dirname "$0")/add-apt-source"\
	"docker"\
  "https://download.docker.com/linux/ubuntu $codename stable"\
	"https://download.docker.com/linux/ubuntu/gpg"

"$(dirname "$0")/add-apt-source"\
	"nodesource"\
  "https://deb.nodesource.com/node_18.x $codename main"\
	"https://deb.nodesource.com/gpgkey/nodesource.gpg.key"

"$(dirname "$0")/add-apt-source"\
	"fullstaq-ruby"\
  "https://apt.fullstaqruby.org ubuntu-$release main"\
	"https://raw.githubusercontent.com/fullstaq-labs/fullstaq-ruby-server-edition/main/fullstaq-ruby.asc"

"$(dirname "$0")/add-apt-source"\
	"heroku"\
  "https://cli-assets.heroku.com/apt ./"\
	"https://cli-assets.heroku.com/apt/release.key"

sudo apt update

sudo apt install\
	asciinema\
	audacity\
	borgmatic\
	brotli\
	build-essential\
	curl\
	direnv\
	docker-ce\
	docker-compose-plugin\
	exa\
	ffmpeg\
	fish\
	fullstaq-ruby-3.2\
	fullstaq-ruby-common\
	fzf\
	git-lfs\
	git\
	gnome-boxes\
	gnupg-agent\
	gnupg2\
	graphviz\
	heroku\
	htop\
	inkscape\
	jq\
	kitty\
	leiningen\
	libasound2-dev\
	libdbus-1-dev\
	libheif-dev\
	libpq-dev\
	libsqlite3-dev\
	libssl-dev\
	libvips-dev\
	libvpx7\
	manpages-dev\
	mpv\
	neofetch\
	nextcloud-desktop\
	nodejs\
	pandoc\
	pdftk\
	pgcli\
	piper\
	plantuml\
	qalc\
	qutebrowser\
	ragel\
	ripgrep\
	scdaemon\
	shellcheck\
	tig\
	tmux\
	unzip\
	vim\
	wl-clipboard\
	woff2\
	yt-dlp

echob "Install snap packages"

sudo snap install 1password
sudo snap install chromium
sudo snap install deno
sudo snap install firefox
sudo snap install thunderbird
sudo snap install go --classic
sudo snap install zoom-client
sudo snap install libreoffice

echob "Link dotfiles"

"$(dirname "$0")/link-dotfiles" /home/"$USER"/Code/dotfiles/tilde/*

echob "Enable systemd services"

systemctl --user enable backup-daily.timer backup-daily.service

echob "Switch to Fish"

"$(dirname "$0")/change-shell" "/usr/bin/fish"

echob "Add to docker group"

"$(dirname "$0")/add-to-groups" docker

echob "Install vale"
if [ -x /usr/local/bin/vale ]
then
	echo "vale is already installed"
else
	mkdir /tmp/vale
	wget -q "https://github.com/errata-ai/vale/releases/download/v2.23.0/vale_2.23.0_Linux_64-bit.tar.gz" -O /tmp/vale/vale.tar.gz
	tar -xvzf /tmp/vale/vale.tar.gz -C /tmp/vale
	sudo mv /tmp/vale/vale /usr/local/bin/vale
	echo "installed vale"
fi
vale sync

echob "Set Ruby version and install gems"

rbenv global 3.2 && echo "Ruby Version set to 3.2"

gem install amazing_print brakeman pry rails rubocop rspec

echob "Install Go packages"

go install golang.org/x/lint/golint@latest && echo "golint installed"
go install golang.org/x/tools/gopls@latest && echo "gopls installed"
go install honnef.co/go/tools/cmd/staticcheck@latest && echo "staticcheck installed"
go install github.com/go-delve/delve/cmd/dlv@latest && echo "delve installed"

echob "Install Rust and Rust packages"

if [ "$(type rustup)" ]
then
	echo "rustup already installed"
else
	curl https://sh.rustup.rs -sSf | sh
fi

cargo install git-delta --locked
cargo install spotify_player --locked --no-default-features --features streaming,pulseaudio-backend,media-control

