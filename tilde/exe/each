#!/usr/bin/env ruby
# Start a ractor for each provided directory on STDIN and
# run the provided command in that directory
# Provides an overview which command succeeded, and which failed
# then puts out the stdout and stderr for each failed command
require "open3"
require "pathname"

COMMAND = ARGV.freeze
Result = Struct.new(:success?, :error)

ractors = []

$stdin.each do |project_dir|
  project_dir.strip!
  project_name = Pathname.new(project_dir).basename.to_s

  ractor = Ractor.new(name: project_name) do
    output, status = Open3.capture2e(*COMMAND, chdir: receive)
    Ractor.yield Result.new(status.success?, output)
  rescue Errno::ENOTDIR
    Ractor.yield Result.new(false, "Not a directory")
  end

  ractor.send(project_dir)
  ractors << ractor
end

errors = []

while ractors.any?
  ractor, result = Ractor.select(*ractors)
  if result.success?
    puts "✓ #{ractor.name}"
  else
    errors << "\n#{ractor.name}:\n#{result.error}"
    puts "✗ #{ractor.name}"
  end
  ractors.delete(ractor)
end

puts errors
