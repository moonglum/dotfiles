#!/bin/sh
# provision this machine
set -eu

highlight=$(tput bold)
reset=$(tput sgr0)
echob() {
	echo "${highlight}${1}${reset}"
}

echob "Install apt packages and sources"

"$(dirname "$0")/add-apt-source"\
	"docker"\
 	"https://download.docker.com/linux/ubuntu/gpg"\
  "https://download.docker.com/linux/ubuntu"\
  "$(lsb_release -cs)"\
	"stable"

"$(dirname "$0")/add-apt-source"\
	"azure-cli"\
 	"https://packages.microsoft.com/keys/microsoft.asc"\
  "https://packages.microsoft.com/repos/azure-cli"\
  "$(lsb_release -cs)"\
	"main"

"$(dirname "$0")/add-apt-source"\
	"nodesource"\
 	"https://deb.nodesource.com/gpgkey/nodesource.gpg.key"\
  "https://deb.nodesource.com/node_18.x"\
  "$(lsb_release -cs)"\
	"main"

"$(dirname "$0")/add-apt-source"\
	"fullstaq-ruby"\
 	"https://raw.githubusercontent.com/fullstaq-labs/fullstaq-ruby-server-edition/main/fullstaq-ruby.asc"\
  "https://apt.fullstaqruby.org"\
  "ubuntu-$(lsb_release -rs)"\
	"main"

sudo apt update

sudo apt install\
	asciinema\
	azure-cli\
	brotli\
	build-essential\
	curl\
	direnv\
	docker-ce\
	docker-compose-plugin\
	exa\
	fd-find\
	ffmpeg\
	fish\
	fullstaq-ruby-3.1\
	fullstaq-ruby-common\
	fzf\
	git-lfs\
	git\
	gnupg-agent\
	gnupg2\
	golang\
	htop\
	jq\
	leiningen\
	libheif-dev\
	libpq-dev\
	libsqlite3-dev\
	libvips-dev\
	libssl-dev\
	libasound2-dev\
	libdbus-1-dev\
	libvpx7\
	manpages-dev\
	neofetch\
	pandoc\
	nodejs\
	pdftk\
	python3-pip\
	ragel\
	ripgrep\
	rust-all\
	shellcheck\
	tig\
	tmux\
	unzip\
	woff2\
	vim

echob "Install snap packages"

sudo snap install chromium
sudo snap install firefox

echob "Link dotfiles"

for file in /home/"$USER"/Code/dotfiles/tilde/*
do
	"$(dirname "$0")/ilns" "$file" "/home/$USER/.$(basename "$file")"
done

echob "Link scripts"

for file in /home/"$USER"/Code/dotfiles/exe/*
do
	sudo "$(dirname "$0")/ilns" "$file" "/usr/local/bin/$(basename "$file")"
done

echob "Switch to Fish"

desired_shell="/usr/bin/fish"
if [ "$SHELL" = "$desired_shell" ]
then
	echo "Shell is already set correctly"
else
	chsh -s "$desired_shell"
fi

echob "Install or Update Vim Plugins and Spell Files"

mkdir -p "/home/$USER/.vim/pack/bundle/start"
"$(dirname "$0")/gcp" "https://github.com/w0rp/ale" "/home/$USER/.vim/pack/bundle/start/ale"
"$(dirname "$0")/gcp" "https://github.com/editorconfig/editorconfig-vim" "/home/$USER/.vim/pack/bundle/start/editorconfig-vim"
"$(dirname "$0")/gcp" "https://github.com/junegunn/fzf" "/home/$USER/.vim/pack/bundle/start/fzf"
"$(dirname "$0")/gcp" "https://github.com/tpope/vim-commentary" "/home/$USER/.vim/pack/bundle/start/vim-commentary"
"$(dirname "$0")/gcp" "https://github.com/sheerun/vim-polyglot" "/home/$USER/.vim/pack/bundle/start/vim-polyglot"
"$(dirname "$0")/gcp" "https://github.com/tpope/vim-repeat" "/home/$USER/.vim/pack/bundle/start/vim-repeat"
"$(dirname "$0")/gcp" "https://github.com/tpope/vim-sensible" "/home/$USER/.vim/pack/bundle/start/vim-sensible"
"$(dirname "$0")/gcp" "https://github.com/altercation/vim-colors-solarized" "/home/$USER/.vim/pack/bundle/start/vim-colors-solarized"
"$(dirname "$0")/gcp" "https://github.com/tpope/vim-surround" "/home/$USER/.vim/pack/bundle/start/vim-surround"
"$(dirname "$0")/gcp" "https://github.com/skalnik/vim-vroom" "/home/$USER/.vim/pack/bundle/start/vim-vroom"

mkdir -p "/home/$USER/.vim/spell"
"$(dirname "$0")/ecurl" "http://ftp.vim.org/pub/vim/runtime/spell/en.utf-8.spl" "/home/$USER/.vim/spell/en.utf-8.spl"
"$(dirname "$0")/ecurl" "http://ftp.vim.org/pub/vim/runtime/spell/en.utf-8.sug" "/home/$USER/.vim/spell/en.utf-8.sug"
"$(dirname "$0")/ecurl" "http://ftp.vim.org/pub/vim/runtime/spell/de.utf-8.spl" "/home/$USER/.vim/spell/de.utf-8.spl"
"$(dirname "$0")/ecurl" "http://ftp.vim.org/pub/vim/runtime/spell/de.utf-8.sug" "/home/$USER/.vim/spell/de.utf-8.sug"

echob "Add to docker group"

if groups "$USER" | grep -q "docker"
then
	echo "Already in group docker"
else
	echo "Not in docker"
	sudo usermod -aG docker "$USER"
	echo "Added to group docker, will be active after logging in again"
fi

echob "Set Ruby version and install gems"

rbenv global 3.1 && echo "Ruby Version set to 3.1"

for gem_name in amazing_print brakeman pry rails rubocop rspec
do
	if gem list --local | grep -E "^$gem_name " > /dev/null
	then
		echo "$gem_name already installed"
	else
		gem install "$gem_name"
	fi
done

echob "Install Python packages"

pip3 install --user pgcli
pip3 install --user yt-dlp

echob "Install Go packages"

go install golang.org/x/lint/golint@latest && echo "golint installed"
go install golang.org/x/tools/gopls@latest && echo "gopls installed"
go install honnef.co/go/tools/cmd/staticcheck@latest && echo "staticcheck installed"
go install github.com/go-delve/delve/cmd/dlv@latest && echo "delve installed"

echob "Install Rust packages"

cargo install git-delta
cargo install spotify_player --no-default-features --features streaming,pulseaudio-backend,media-control

